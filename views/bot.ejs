<!DOCTYPE html><html><head><meta charset="UTF-8"><title>Manage <%= bot %></title>
<link rel="stylesheet" href="/style.css"><script src="/socket.io/socket.io.js"></script></head><body>
<h1>Manage Bot: <%= bot %></h1>
<div class="controls">
  <select id="scriptSelect"></select>
  <button onclick="run()">Run</button>
  <button onclick="stop()">Stop</button>
</div>
<h2>Console</h2><pre id="console"></pre>
<h2>File Manager</h2>
<div id="breadcrumbs"></div>
<ul id="entries"></ul>
<input type="file" id="fileUpload"><button onclick="upload()">Upload File</button>
<script>
const bot = "<%= bot %>";
const socket = io();
socket.on('output', d=>document.getElementById('console').textContent+=d);
socket.on('fileData', d=>{
  const content=prompt('Edit '+d.path, d.content);
  if(content!==null) socket.emit('writeFile',{bot, path:d.path, content});
});
let currentPath='';
function loadExplorer(path='') {
  fetch(`/explore/${bot}?path=${encodeURIComponent(path)}`)
    .then(r=>r.json()).then(data=>{
      currentPath = data.path;
      // breadcrumbs
      const bc = data.path.split('/').filter(Boolean);
      document.getElementById('breadcrumbs').innerHTML = bc.map((p,i)=>`<a href="#" onclick="loadExplorer('${bc.slice(0,i+1).join('/')}')">${p}</a>`).join(' / ');
      // entries
      const ul = document.getElementById('entries'); ul.innerHTML='';
      data.entries.forEach(e=>{
        const li = document.createElement('li');
        if(e.isDir) {
          li.textContent = '[DIR] '+e.name;
          li.onclick = ()=>loadExplorer(currentPath?currentPath+'/'+e.name:e.name);
        } else {
          li.textContent = e.name;
          li.onclick = ()=> socket.emit('readFile',{bot,path:currentPath?currentPath+'/'+e.name:e.name});
        }
        // delete button
        const del = document.createElement('button');
        del.textContent='Delete';
        del.onclick = () => socket.emit('deleteFile',{bot,path:currentPath?currentPath+'/'+e.name:e.name,isDir:e.isDir});
        li.appendChild(del);
        ul.appendChild(li);
      });
      // update scriptSelect only top-level js
      const scripts = data.entries.filter(e=>!e.isDir && e.name.endsWith('.js')).map(e=>e.name);
      const sel = document.getElementById('scriptSelect');
      sel.innerHTML = scripts.map(s=>`<option value="${s}">${s}</option>`).join('');
    });
}
function run(){ socket.emit('action',{bot,cmd:'run',file:document.getElementById('scriptSelect').value}); }
function stop(){ socket.emit('action',{bot,cmd:'stop'}); }
function upload(){
  const f = document.getElementById('fileUpload').files[0];
  if(!f) return;
  const fd = new FormData();
  fd.append('newfile', f);
  fetch(`/uploadfile/${bot}?path=${encodeURIComponent(currentPath)}`,{method:'POST',body:fd})
    .then(()=>loadExplorer(currentPath));
}
loadExplorer();
</script>
</body></html>
